<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Generics on Explorations ... Go Packages</title>
    <link>https://mandolyte.github.io/explorations/tags/generics/</link>
    <description>Recent content in Generics on Explorations ... Go Packages</description>
    <generator>Hugo -- gohugo.io</generator>
    <copyright>Copyright &amp;copy; 2018 - Cecil New</copyright>
    <lastBuildDate>Wed, 04 Jul 2018 13:19:13 -0400</lastBuildDate>
    
	<atom:link href="https://mandolyte.github.io/explorations/tags/generics/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Using Experimental Go Generics</title>
      <link>https://mandolyte.github.io/explorations/posts/using-experimental-go-generics/</link>
      <pubDate>Wed, 04 Jul 2018 13:19:13 -0400</pubDate>
      
      <guid>https://mandolyte.github.io/explorations/posts/using-experimental-go-generics/</guid>
      <description>Overview There are at least two experimental implementations of Go that add generics (see note 1). I experimented with albrow/fo. I don&amp;rsquo;t know enough to classify the approached used by fo, but in simple terms, both type declarations and functions/methods are extended to take optional type parameters</description>
    </item>
    
  </channel>
</rss>